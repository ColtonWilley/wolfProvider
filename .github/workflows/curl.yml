name: Curl Tests

# START OF COMMON SECTION
on:
  push:
    branches: [ 'master', 'main', 'release/**' ]
  pull_request:
    branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
# END OF COMMON SECTION

jobs:
  build_wolfprovider:
    name: Build wolfProvider
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
    - name: Checking for cached dependencies
      uses: actions/cache@v4
      id: cache
      with:
        path: |
          openssl-source
          openssl-install
          wolfssl-source
          wolfssl-install
          wolfprov-install

        key: wolfprov-depends
        lookup-only: true

      - name: Checkout wolfProvider
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4

      - name: Build wolfProvider
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          ./scripts/build-wolfprovider.sh
          make check

      - name: Print errors
        if: steps.cache.outputs.cache-hit != 'true'
        if: ${{ failure() }}
        run: |
          if [ -f test-suite.log ] ; then
            cat test-suite.log
          fi

  test_curl:
    runs-on: ubuntu-22.04
    needs: build_wolfprovider
    # This should be a safe limit for the tests to run.
    timeout-minutes: 20
    strategy:
      matrix:
        curl_ref: [ 'master', 'curl-8_4_0' ]
    steps:
      - name: Checking if we have nss in cache
        uses: actions/cache/restore@v4
        id: cache
        with:
          path: |
            openssl-source
            openssl-install
            wolfssl-source
            wolfssl-install
            wolfprov-install

          key: wolfprov-depends
          fail-on-cache-miss: true

      - name: Install curl test dependencies
        run: |
          sudo apt-get update
          sudo apt-get install nghttp2 libpsl5 libpsl-dev python3-impacket

      - name: Build curl
        uses: wolfSSL/actions-build-autotools-project@v1
        with:
          repository: curl/curl
          path: curl
          ref: ${{ matrix.curl_ref }}
          configure: --with-openssl=$GITHUB_WORKSPACE/openssl-install/
          check: false

      - name: Test curl with wolfProvider
        working-directory: curl
        run: |
          export LD_LIBRARY_PATH=$GITHUB_WORKSPACE/wolfssl-install/lib:$GITHUB_WORKSPACE/openssl-install/lib64
          export OPENSSL_CONF=$GITHUB_WORKSPACE/provider.conf
          export OPENSSL_MODULES=$GITHUB_WORKSPACE/wolfprov-install/lib
          make -j $(nproc) test-ci
